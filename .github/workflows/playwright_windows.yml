name: Java CI with Gradle [WINDOWS] Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    runs-on: ubuntu-latest # Изменено с windows-latest на ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Установка Java
      - name: Set execute permission for gradlew
        run: chmod +x gradlew # Изменено с git update-index --chmod=+x gradlew на chmod +x gradlew
      - name: /////// Install Java version "21" ///////
        uses: actions/setup-java@v4 # обновлено до v4
        with:
          distribution: 'temurin'
          java-version: '21'
      # Проверка версий Java, JVM, Java Core
      - name: Check Java version
        run: java -version
      - name: Check JVM version
        run: echo $JAVA_HOME
      - name: Check Java Core version
        run: javac -version
      # Установка Node.js
      - name: Install Node version "20.11.1"
        uses: actions/setup-node@v4 # обновлено до v4
        with:
          node-version: '20.11.1'
      - name: Check Node version
        run: node --version
      # Установка Gradle
      - name: Install Gradle version "8.6"
        run: ./gradlew build -x test --no-build-cache # Изменено с .\gradlew на ./gradlew
      - name: Check Gradle version
        run: ./gradlew --version # Изменено с .\gradlew на ./gradlew
      # Установка Playwright
      - name: Install Playwright version "1.42.0"
        run: npm install playwright@1.42.0
      - name: Check Playwright version
        run: npx playwright --version
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwoff1 \
                                  libopus0 \
                                  libwebp6 \
                                  libwebpdemux2 \
                                  libenchant1c2a \
                                  libgudev-1.0-0 \
                                  libsecret-1-0 \
                                  libhyphen0 \
                                  libgdk-pixbuf2.0-0 \
                                  libegl1 \
                                  libnotify4 \
                                  libxslt1.1 \
                                  libevent-2.1-6 \
                                  libgles2 \
                                  libvpx5
      # Установка Allure
      - name: Install Allure
        run: npm install -g allure-commandline
      - name: Check Allure version
        run: allure --version
      # Список папок до тестов
      - name: List Directories before tests
        run: ls -R # Изменено с Get-ChildItem -Recurse на ls -R
      # Запуск тестов
      - name: ~~~~~~~ Run tests ~~~~~~~
        run: ./gradlew test # Изменено с .\gradlew на ./gradlew
      # Список папок после тестов
      - name: List Directories after tests
        run: ls -R # Изменено с Get-ChildItem -Recurse на ls -R
      # Создание отчетоа Playwright
      - name: Archive [test results]
        uses: actions/upload-artifact@v4 # обновлено до v4
        if: always()
        with:
          name: playwright-results
          path: |
            build/reports/tests/test/*
      # Создание отчета Allure-offline
      - name: Archive [Allure reports]
        uses: actions/upload-artifact@v4 # обновлено до v4
        if: always()
        with:
          name: allure-report-offline
          path: |
            src/test_logs/ALLURE_REPORT_OFFLINE/
      # Создание архива с файлами упавших тестов
      - name: Archive [Allure attachments for failed tests]
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-attachments for failed tests
          path: |
            src/test_logs/*
      # Load test report history
      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      # Build test report
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results
      # Publish test report
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history